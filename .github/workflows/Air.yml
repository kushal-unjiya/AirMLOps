name: Air Quality Monitoring Workflows

on:
  schedule:
    - cron: '0 * * * *' # Feature pipeline runs every hour
    - cron: '0 0 * * 0' # Model training runs weekly on Sundays
  workflow_dispatch: # Allow manual triggers for both workflows

jobs:
  feature-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Feature Pipeline
        env:
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
        run: |
          python src/pipelines/feature_pipeline.py

      - name: Commit and Push Feature Data
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add data/features/
          git commit -m "Update features data" || exit 0
          git push

  train-model:
    runs-on: ubuntu-latest
    needs: feature-pipeline # Ensures feature pipeline runs first
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Backfill Historical Data
        env:
          OPENWEATHERMAP_API_KEY: ${{ secrets.OPENWEATHERMAP_API_KEY }}
        run: |
          python src/pipelines/backfill_pipeline.py

      - name: Train Model
        run: |
          python src/pipelines/training_pipeline.py

      - name: Commit and Push Model Updates
        run: |
          git config --local user.email "github-actions@github.com"
          git config --local user.name "GitHub Actions"
          git add data/historical/ models/
          git commit -m "Update model and historical data" || exit 0
          git push
